{"version":3,"sources":["../../src/services/acronym.service.ts"],"sourcesContent":["import { CreateDataDto } from '@dtos/users.dto';\nimport { HttpException } from '@exceptions/HttpException';\n// import { Acronym } from '@/interfaces/acronym.interface';\nimport userModel from '@models/acronym.model';\nimport { isEmpty } from '@utils/util';\nimport fs from 'fs';\nimport path from 'path';\n\nclass AcronymService {\n  public acronym = userModel;\n\n  public async findAllUser(): Promise<any[]> {\n    const acronym: any[] = this.acronym;\n    return acronym;\n  }\n\n  public async findDataByFilter(from: number, limit: number, search: string): Promise<any> {\n    if (limit < 1 || from < 0) {\n      throw new HttpException(400, 'Invalid Params');\n    }\n    const findData: any = this.acronym;\n    if (!findData) throw new HttpException(409, \"Data doesn't exist\");\n    if (search === 'undefined') {\n      return findData[0].slice(from - 1, from + limit - 1);\n    } else {\n      const findAcronyms: any[] = this.acronym[0].filter(acronym => {\n        const key = Object.keys(acronym)[0];\n        if (key.search(search) !== -1 || acronym[key].search(search) !== -1) {\n          return acronym;\n        }\n      });\n      return findAcronyms.slice(from - 1, from + limit - 1);\n    }\n  }\n\n  public async createData(data: CreateDataDto): Promise<any> {\n    this.acronym[0].map((key: any) => {\n      if (Object.keys(key)[0] === data.acronym) {\n        throw new HttpException(409, 'Data already exist');\n      }\n    });\n\n    const createUserData: any = { ...data };\n    this.acronym[0].push({ [data.acronym]: data.definition });\n    const newData = JSON.stringify(this.acronym);\n    fs.writeFile(path.join(process.cwd() + '/acronym.json'), newData, 'utf8', function (err) {\n      if (err) {\n        console.log('An error occured while writing JSON Object to File.');\n        return console.log(err);\n      }\n      console.log('JSON file has been saved.');\n    });\n    return createUserData;\n  }\n\n  public async updateData(acronym: string, definition: string): Promise<any[]> {\n    if (isEmpty(definition)) throw new HttpException(400, 'definition is empty');\n    const newArr = [];\n    this.acronym[0].map((key: any) => {\n      if (Object.keys(key)[0] === acronym) {\n        newArr.push(definition);\n      }\n    });\n\n    if (newArr.length === 0) {\n      throw new HttpException(409, \"Acronym doesn't exist\");\n    }\n\n    const newData = [];\n    this.acronym[0].map((key: any) => {\n      if (Object.keys(key)[0] === acronym) {\n        newData.push({ [Object.keys(key)[0]]: definition });\n      } else {\n        newData.push({ [Object.keys(key)[0]]: key[Object.keys(key)[0]] });\n      }\n    });\n    fs.writeFile(path.join(process.cwd() + '/acronym.json'), JSON.stringify(newData), 'utf8', function (err) {\n      if (err) {\n        console.log('An error occured while writing JSON Object to File.');\n        return console.log(err);\n      }\n      console.log('JSON file has been saved.');\n    });\n\n    return newArr;\n  }\n\n  public async deleteData(acronym: string): Promise<any[]> {\n    const newArr = [];\n    this.acronym[0].map((key: any) => {\n      if (Object.keys(key)[0] === acronym) {\n        newArr.push(acronym);\n      }\n    });\n\n    if (newArr.length === 0) {\n      throw new HttpException(409, \"Acronym doesn't exist\");\n    }\n\n    const newData = [];\n    this.acronym[0].map((key: any) => {\n      if (Object.keys(key)[0] !== acronym) {\n        newData.push({ [Object.keys(key)[0]]: key[Object.keys(key)[0]] });\n      }\n    });\n    fs.writeFile(path.join(process.cwd() + '/acronym.json'), JSON.stringify(newData), 'utf8', function (err) {\n      if (err) {\n        console.log('An error occured while writing JSON Object to File.');\n        return console.log(err);\n      }\n      console.log('JSON file has been saved.');\n    });\n\n    return newArr;\n  }\n}\n\nexport default AcronymService;\n"],"names":["AcronymService","findAllUser","acronym","findDataByFilter","from","limit","search","HttpException","findData","slice","findAcronyms","filter","key","Object","keys","createData","data","map","createUserData","push","definition","newData","JSON","stringify","fs","writeFile","path","join","process","cwd","err","console","log","updateData","isEmpty","newArr","length","deleteData","userModel"],"mappings":"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"}